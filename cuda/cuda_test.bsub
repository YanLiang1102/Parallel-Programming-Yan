#!/bin/tcsh
#
# example_cuda.bsub
#
# This example batch script is intended for running non-parallel
# (serial) programs, using the NVIDIA CUDA nodes, each of which is
# connected to *two* NVIDIA graphics cards, for General Purpose
# Graphics Processing Unit (GPGPU) computing.
#
# PLEASE DON'T REMOVE THESE COMMENTS EVER!!!
# They will always be important and may save you lots of grief.
#
# Also, please note that lines that begin with pound-BSUB (#) are
# batch scheduler directives, so they are absolutely crucial.
# DON'T REMOVE THE pound sign (#) from before the BSUB!!!!
#
# Throughout this entire batch script file:
# CHANGE yourusername to your user name; CHANGE directory_to_run_in
# to the directory that you want to run in; CHANGE jobname to your
# preferred name for this batch job.
#
# NOTE: If you create any file of human-readable text on a Windows PC,
# you *MUST* perform the following command on it:
#
#   dos2unix filename
#
# where you replace "filename" with the name of the file; for example:
#
#   dos2unix /home/yourusername/input_directory/input_filename.txt
#
# This is because virtually all text editors in Windows embed hidden
# special characters in text files (for example, font information),
# and these hidden special characters cause Unix/Linux programs to
# choke.
#
# To submit a batch job:
#
#   bsub < jobname.bsub
#
# To see what batch jobs you personally have in the queue:
#
#   bjobs
#
# To see what batch jobs everyone has in the queue:
#
#   bjobs -uall
#
# To kill a batch job (replace # with the batch job ID number):
#
#   bkill #
#
# Below is the output of bjobs -uall. Note that PEND means that the
# batch job is pending (sitting in the queue waiting its turn to run)
# and RUN means running (surprise!).
#
# JOBID   USER    STAT  QUEUE    FROM_HOST EXEC_HOST JOB_NAME   SUBMIT_TIME
# 1873    andubey PEND  normal   boomer1             *ppn1_016n Apr 22 19:14
# 1976    kwthoma PEND  normal   boomer1             spstorm    Apr 24 17:36
# 1977    bcg     PEND  normal   boomer2             *ib-test32 Apr 25 14:05
# 1986    bcg     PEND  normal   boomer2             *ib-test32 Apr 25 14:05
# 2087    aauroux PEND  normal   boomer1             nbody_mpi  Apr 26 17:26
# 2088    aauroux PEND  normal   boomer1             nbody_mpi  Apr 26 17:26
# 2147    llee    PEND  normal   boomer1             *flow.bsub Apr 27 20:57
# 2148    llee    PEND  normal   boomer1             *flow.bsub Apr 27 20:58
# 2149    llee    PEND  normal   boomer1             *flow.bsub Apr 27 20:58
# 2150    llee    PEND  normal   boomer1             *flow.bsub Apr 27 20:58
# 2146    llee    PEND  normal   boomer1             lammps     Apr 27 20:53
#
# The BSUB directive below says the name of the queue to be used.
# For jobs that use NVIDIA CUDA graphics processing unit capability,
# you should use the queue named cuda.
#
#BSUB -q cuda
#
# The BSUB directive below says to request exclusive access on the
# participating compute nodes, so that other batch jobs (for example,
# those submitted by other users) don't run on the same compute nodes
# as this batch job, and therefore don't interfere with it.
#
#BSUB -x
#
# The BSUB directive below says to use 8 MPI processes at 2 MPI
# processes per node, which is to say 4 nodes.
#
# NOTE: You are encouraged to change these to numbers that are
# appropriate for you.
#
# NOTE: The CUDA nodes are configured so that each CUDA node
# connects to *TWO* NVIDIA graphics cards. We recommend that you
# run one process for each NVIDIA graphics card.
#
#BSUB -n 1
#
# STDOUT is the output that normally would go to the terminal screen.
# STDERR is like STDOUT, except that it contains error messages instead
# of regular output.
#
# The BSUB directive below says, send STDOUT and STDERR to the filenames
# listed below.
#
# Note that, in these filenames, %J will be replaced by the batch job ID
# number (for example, 2146 as above).
#
# Throughout this entire batch script file:
# CHANGE yourusername to your user name; CHANGE directory_to_run_in
# to the directory that you want to run in; CHANGE jobname to your
# preferred name for this batch job.
#
#BSUB -o /home/oucs/test_cuda_%J_stdout.txt
#BSUB -e /home/oucs/test_cuda_%J_stderr.txt
#
# The BSUB directive below says to run for up to 12 hours (and zero
# minutes) of "wall clock" time (time experienced in real life).
# Currently, the maximum allowable wall clock time per batch job is
# 48:00 hours.
#
#BSUB -W 01:00
#
# The BSUB directive below says the name of the batch job, as it
# will appear in the batch queue when you do a bjobs command.
# CHANGE jobname to the name of this batch job (everywhere in this
# batch script file).
#
#BSUB -J "test_cuda"
#
# The BSUB directive below says the e-mail address to send
# notifications to, which should be changed to your e-mail address.
#
#BSUB -u jonathan@ou.edu
#
# The BSUB directive below says to e-mail a notification when the
# batch job either completes or fails.
#
# If you only want e-mails when when a batch job fails, then delete
# the BSUB directive below.
#
#BSUB -N

# Set the CUDA path environment variable to the directory that
# contains the NVIDIA CUDA software that you want to use.
#
# The one below is the default location of the systemwide CUDA
# software toolkit that we have installed for you.
#
# You shouldn't change this unless you REALLY know what you're doing.
#
# If you want to use a different CUDA software toolkit, for example
# one that you've installed yourself, then edit the directory in
# this environment variable, replacing ours with the directory
# that contains the CUDA software toolkit that you want to use.

setenv CUDA_PATH /opt/local/software/Cuda/4.2.9

# Add the directory containing the software libraries of the CUDA
# software toolkit to your software library path (that is, the
# list of directories that the batch system will examine to find
# software libraries to use when running). The command below puts
# the location of the CUDA software libraries at the beginning of
# your LD_LIBRARY_PATH environment variable, so when CUDA-enabled
# software applications search for the CUDA software libraries,
# they look in these locations first.
#
# You shouldn't change this unless you REALLY know what you're doing.
#
# You should only change these paths IF you changed the CUDA_PATH
# environment variable, above. Otherwise, DON'T CHANGE THIS!!

setenv LD_LIBRARY_PATH ${CUDA_PATH}/lib:${CUDA_PATH}/open64/lib:${CUDA_PATH}/lib64:${LD_LIBRARY_PATH}

# Add the directory containing the executables of the CUDA
# software toolkit to your executable path (that is, the list of
# directories that the batch system will examine to find
# executables to run). The command below puts the location of the
# CUDA executables at the beginning of your PATH environment
# variable, so when CUDA-enabled batch jobs search for the CUDA
# executables, they look in these locations first.
#
# You shouldn't change this unless you REALLY know what you're doing.
#
# You should only change these paths IF you changed the CUDA_PATH
# environment variable, above. Otherwise, DON'T CHANGE THIS!!

setenv PATH ${CUDA_PATH}/bin:${CUDA_PATH}/open64/bin:${PATH}

# Change to the directory that you want to run in.
#
# Throughout this entire batch script file:
# CHANGE yourusername to your user name; CHANGE directory_to_run_in
# to the directory that you want to run in; CHANGE jobname to your
# preferred name for this batch job.

cd /home/oucs

# Make sure that you're in the correct directory.

pwd

# Run the executable, redirecting input from the given file.
# The date commands and the time command help track runtime
# and performance.
#
# NOTE: The line immediately before the second date command,
# which runs the executable, "redirects" standard input
# (typically a user typing at the keyboard) from a file of
# human readable text.
#
# If your program uses no input, or if for all input your program
# explicitly opens its files inside the program (for example, via
# an OPEN statement in Fortran or an fopen command in C), then you
# don't need that line, nor do you need the backslash \ at the end
# of the previous line, so DELETE THEM.
#
# Throughout this entire batch script file:
# CHANGE yourusername to your user name; CHANGE directory_to_run_in
# to the directory that you want to run in; CHANGE jobname to your
# preferred name for this batch job.
#
# Here, also CHANGE executable_directory to the directory where your
# executable resides, CHANGE executable_filename to the name of the
# executable file, CHANGE input_directory to the directory where your
# standard input file resides, and CHANGE input_filename.txt to the
# name of your standard input file (that is, the file that you want
# to use for standard input, instead of a user typing live at the
# keyboard, which isn't possible for a batch job).
#
# NOTE!!! YOU ***MUST*** USE THE ABSOLUTE FULL PATH FOR YOUR EXECUTABLE!
#   ***DON'T*** USE A RELATIVE PATH OR LEAVE OUT THE PATH!!!

date
time \
  /home/oucs/cuda_test
date
